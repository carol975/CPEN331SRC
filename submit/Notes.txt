ELF: Executable and Linkable FOrmat is a common standard file form for
executables, object code, sared libraries, and core dumps


syscall(struct trapframe *tf
sys_reboot:

sys_time:
]callnumber]

find the error code
sys_open:
dispatched from syscall.c
callno is: SYS_open
Must prevent opening morethan the allowed number of file descriptors, 
Must returna appropriate error codes.
kern/arch/mips/syscall add instruction in this file 

error code is in: src/kern/include/kern/errno.h
syscall no is in: src/kern/include/kern/syscall.h

open(): use vfs_open in kern/vfs.vfspath.c
all function return 0 if no errors, else return error code


-write the enter_forked_process(struct trapfram *tf) in syscall.c in src.kern/arch/mips/syscall

/*
 * copyout
 *
 * Copy a block of memory of length LEN from kernel address SRC to
 * user-level address USERDEST. We can use memcpy because it's
 * protected by the tm_badfaultfunc/copyfail logic.
 */
int
copyout(const void *src, userptr_t userdest, size_t len)
{
/*
 * copyin
 *
 * Copy a block of memory of length LEN from user-level address USERSRC
 * to kernel address DEST. We can use memcpy because it's protected by
 * the tm_badfaultfunc/copyfail logic.
 */
int
copyin(const_userptr_t usersrc, void *dest, size_t len)
{


